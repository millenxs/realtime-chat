services:
  backend:
    container_name: backend
    build: ./apps/backend
    ports:
      - "3333:3333"
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - prisma-migrate
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/realtime-chat
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGIN=http://frontend:3000
    networks:
      - chatnet
    command: npm run dev

  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: realtime-chat
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - chatnet

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - chatnet

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - chatnet

  frontend:
    container_name: frontend
    build: ./apps/frontend
    ports:
      - "3000:3000"
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:3333
      - CORS_ORIGIN=http://frontend:3000
    depends_on:
      - backend
    networks:
      - chatnet

  prisma-migrate:
    container_name: prisma-migrate
    build: ./apps/backend
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/realtime-chat
    command: npx prisma migrate deploy
    networks:
      - chatnet

networks:
  chatnet:
    driver: bridge

volumes:
  postgres-data:
